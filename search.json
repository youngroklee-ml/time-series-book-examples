[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Examples in Time Series Analysis and Application",
    "section": "",
    "text": "Preface\nThis is a R implementation of examples in “Time Series Analysis and Application” by Chi-Hyuck Jun.\n\nBook: 시계열 분석 및 응용\nData download: 자유아카데미 자료실",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "ch01_smoothing.html",
    "href": "ch01_smoothing.html",
    "title": "1  Smoothing",
    "section": "",
    "text": "1.1 Example 1.1",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Smoothing</span>"
    ]
  },
  {
    "objectID": "ch01_smoothing.html#example-1.1",
    "href": "ch01_smoothing.html#example-1.1",
    "title": "1  Smoothing",
    "section": "",
    "text": "1.1.1 Data\nCreate a data frame.\n\nforest_fire &lt;- tribble(\n  ~year, ~cnt,\n  2006, 369,\n  2007, 418,\n  2008, 389,\n  2009, 570,\n  2010, 282,\n  2011, 277,\n  2012, 197,\n  2013, 296,\n  2014, 492,\n  2015, 623,\n  2016, 391\n)\n\n\n\n1.1.2 Convert to time-series data\nConvert the data frame to time series data frame (tsibble) object. You must set index with a column that represents timepoints for the series. Please note that tsibble automatically notice that the index is year and that the series is regular yearly series.\n\nforest_fire_ts &lt;-\n  forest_fire |&gt;\n  as_tsibble(index = year)\n\nforest_fire_ts\n\n# A tsibble: 11 x 2 [1Y]\n    year   cnt\n   &lt;dbl&gt; &lt;dbl&gt;\n 1  2006   369\n 2  2007   418\n 3  2008   389\n 4  2009   570\n 5  2010   282\n 6  2011   277\n 7  2012   197\n 8  2013   296\n 9  2014   492\n10  2015   623\n11  2016   391\n\n\n\n\n1.1.3 Moving average\nCompute moving average by calling slider::slide_mean(). Set complete = TRUE to return missing value NA when there are missing observations in the sliding window.\n\nforest_fire_ma &lt;-\n  forest_fire_ts |&gt;\n  mutate(\n    ma3 = slider::slide_mean(cnt, before = 2, after = 0, complete = TRUE),\n    ma6 = slider::slide_mean(cnt, before = 5, after = 0, complete = TRUE)\n  )\n\nforest_fire_ma\n\n# A tsibble: 11 x 4 [1Y]\n    year   cnt   ma3   ma6\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  2006   369   NA    NA \n 2  2007   418   NA    NA \n 3  2008   389  392    NA \n 4  2009   570  459    NA \n 5  2010   282  414.   NA \n 6  2011   277  376.  384.\n 7  2012   197  252   356.\n 8  2013   296  257.  335.\n 9  2014   492  328.  352.\n10  2015   623  470.  361.\n11  2016   391  502   379.\n\n\n\n\n\n\n\n\nNote\n\n\n\n{slider} package provides functions to conduct rolling analysis using window functions. slide_*() function family is useful for time series with regular observations (i.e. no missing time period) as in this example. If your time series appear to be irregular, slide_index_*() function family would be useful.\n\n\nNow, forest_fire_ma is a time series data frame with three series: original value cnt, 3-yr moving average ma3, and 6-yr moving average ma6.\n\n\n1.1.4 Visualization\nCovert this to a long form by calling pivot_longer(). The resulting time series data frame will have key that is a label of each series.\n\nforest_fire_ma_long &lt;- \n  forest_fire_ma |&gt;\n  pivot_longer(c(cnt, ma3, ma6), names_to = \"statistics\")\n\nforest_fire_ma_long\n\n# A tsibble: 33 x 3 [1Y]\n# Key:       statistics [3]\n    year statistics value\n   &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;\n 1  2006 cnt          369\n 2  2006 ma3           NA\n 3  2006 ma6           NA\n 4  2007 cnt          418\n 5  2007 ma3           NA\n 6  2007 ma6           NA\n 7  2008 cnt          389\n 8  2008 ma3          392\n 9  2008 ma6           NA\n10  2009 cnt          570\n# ℹ 23 more rows\n\n\nVisualize time series data. Call autoplot() with measurement variable name to draws line plot by each key.\n\nforest_fire_ma_long |&gt; \n  autoplot(value)\n\nWarning: Removed 7 rows containing missing values or values outside the scale range\n(`geom_line()`).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Smoothing</span>"
    ]
  },
  {
    "objectID": "ch01_smoothing.html#example-1.2",
    "href": "ch01_smoothing.html#example-1.2",
    "title": "1  Smoothing",
    "section": "1.2 Example 1.2",
    "text": "1.2 Example 1.2\n\n1.2.1 Load data\n\nhousehold &lt;- \n  read_excel(\"data/J01.xlsx\", skip = 1) |&gt; \n  rename(cnt = `#households`)\n\n\n\n1.2.2 Convert to time-series data\n\nhousehold_ts &lt;-\n  household |&gt; \n  as_tsibble(index = year)\n\nhousehold_ts\n\n# A tsibble: 18 x 2 [1Y]\n    year   cnt\n   &lt;dbl&gt; &lt;dbl&gt;\n 1  2000  2255\n 2  2001  2438\n 3  2002  2628\n 4  2003  2818\n 5  2004  3001\n 6  2005  3186\n 7  2006  3378\n 8  2007  3571\n 9  2008  3766\n10  2009  3963\n11  2010  4174\n12  2011  4380\n13  2012  4563\n14  2013  4756\n15  2014  4965\n16  2015  5179\n17  2016  5382\n18  2017  5562\n\n\n\n\n1.2.3 Train/test split\n\nhousehold_ts_train &lt;-\n  household_ts |&gt; \n  filter(year &lt;= 2014)\n\nhousehold_ts_test &lt;-\n  household_ts |&gt; \n  filter(year &gt; 2014)\n\n\n\n1.2.4 Double moving average with N = 4\n\nN &lt;- 4\n\nhousehold_double_ma &lt;-\n  household_ts_train |&gt; \n  mutate(\n    ma = slider::slide_mean(cnt, before = N - 1, after = 0, complete = TRUE),\n    ma_double = slider::slide_mean(ma, before = N - 1, after = 0, complete = TRUE)\n  )\n\nhousehold_double_ma\n\n# A tsibble: 15 x 4 [1Y]\n    year   cnt    ma ma_double\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1  2000  2255   NA        NA \n 2  2001  2438   NA        NA \n 3  2002  2628   NA        NA \n 4  2003  2818 2535.       NA \n 5  2004  3001 2721.       NA \n 6  2005  3186 2908.       NA \n 7  2006  3378 3096.     2815 \n 8  2007  3571 3284      3002.\n 9  2008  3766 3475.     3191.\n10  2009  3963 3670.     3381.\n11  2010  4174 3868.     3574.\n12  2011  4380 4071.     3771 \n13  2012  4563 4270      3970.\n14  2013  4756 4468.     4169.\n15  2014  4965 4666      4369.\n\n\nVisualize results.\n\nhousehold_double_ma |&gt; \n  pivot_longer(c(cnt, ma, ma_double), names_to = \"statistics\") |&gt; \n  autoplot(value)\n\nWarning: Removed 9 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\n\n1.2.5 Estimate a slope\nTake the latest moving average and double moving average.\n\nlatest &lt;- \n  household_double_ma |&gt; \n  slice_tail(n = 1)\n\nlatest\n\n# A tsibble: 1 x 4 [1Y]\n   year   cnt    ma ma_double\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n1  2014  4965  4666     4369.\n\n\nCompute a slope\n\nb &lt;- (latest$ma - latest$ma_double) / (N - 1) * 2\nb\n\n[1] 198.1667\n\n\n\n\n1.2.6 Prediction\n\nhousehold_ts_test |&gt; \n  mutate(\n    ma = latest$ma,\n    ma_double = 2 * latest$ma - latest$ma_double + (year - latest$year) * b\n  )\n\n# A tsibble: 3 x 4 [1Y]\n   year   cnt    ma ma_double\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n1  2015  5179  4666     5161.\n2  2016  5382  4666     5360.\n3  2017  5562  4666     5558.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Smoothing</span>"
    ]
  },
  {
    "objectID": "ch01_smoothing.html#examples-1.3---1.4",
    "href": "ch01_smoothing.html#examples-1.3---1.4",
    "title": "1  Smoothing",
    "section": "1.3 Examples 1.3 - 1.4",
    "text": "1.3 Examples 1.3 - 1.4\n\n1.3.1 Load data\n\npatent &lt;- \n  read_excel(\"data/J02.xlsx\") |&gt; \n  rename(cnt = `#patents`)\n\n\n\n1.3.2 Convert to time-series data\n\npatent_ts &lt;-\n  patent |&gt; \n  as_tsibble(index = year)\n\npatent_ts\n\n# A tsibble: 24 x 2 [1Y]\n    year   cnt\n   &lt;dbl&gt; &lt;dbl&gt;\n 1  1993  21.5\n 2  1994  28.6\n 3  1995  59.2\n 4  1996  68.4\n 5  1997  67.3\n 6  1998  50.6\n 7  1999  56  \n 8  2000  72.8\n 9  2001  73.7\n10  2002  76.6\n# ℹ 14 more rows\n\n\n\n\n1.3.3 Train/test split\n\npatent_ts_train &lt;-\n  patent_ts |&gt; \n  filter(year &lt;= 2013)\n\npatent_ts_test &lt;- \n  patent_ts |&gt; \n  filter(year &gt; 2013)\n\n\n\n1.3.4 Example 1.3: Double exponential smoothing with \\(\\alpha = 0.2\\)\n\n1.3.4.1 Smoothing on training data\n\nalpha &lt;- 0.2\n\nets_step &lt;- function(x, y, alpha) {\n  stopifnot(alpha &gt;= 0)\n  stopifnot(alpha &lt;= 1)\n  (1 - alpha) * x + alpha * y\n}\n\npatent_ets &lt;- \n  patent_ts_train |&gt; \n  mutate(\n    es = accumulate(cnt, ets_step, alpha = alpha),\n    es_double = accumulate(es, ets_step, alpha = alpha)\n  )\n\npatent_ets\n\n# A tsibble: 21 x 4 [1Y]\n    year   cnt    es es_double\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1  1993  21.5  21.5      21.5\n 2  1994  28.6  22.9      21.8\n 3  1995  59.2  30.2      23.5\n 4  1996  68.4  37.8      26.3\n 5  1997  67.3  43.7      29.8\n 6  1998  50.6  45.1      32.9\n 7  1999  56    47.3      35.7\n 8  2000  72.8  52.4      39.1\n 9  2001  73.7  56.6      42.6\n10  2002  76.6  60.6      46.2\n# ℹ 11 more rows\n\n\nVisualize the smoothing results.\n\npatent_ets |&gt; \n  pivot_longer(c(cnt, es, es_double), names_to = \"statistics\") |&gt; \n  autoplot(value)\n\n\n\n\n\n\n\n\n\n\n1.3.4.2 Estimate coefficients\nTake the last training time point.\n\nlatest &lt;- \n  patent_ets |&gt; \n  slice_tail(n = 1)\n\nn_train &lt;- nrow(patent_ets)\nlatest_year &lt;- latest$year\n\nEstimate slope b.\n\nb &lt;- alpha / (1 - alpha) * (latest$es - latest$es_double)\nb\n\n[1] 5.851673\n\n\nEstimate constant c.\n\nc &lt;- 2 * latest$es - latest$es_double - b * n_train\nc\n\n[1] 32.22202\n\n\n\n\n1.3.4.3 Prediction\n\npatent_ts_test |&gt; \n  mutate(\n    forecast = c + b * (n_train + (year - latest_year)),\n    forecast_error = cnt - forecast\n  )\n\n# A tsibble: 3 x 4 [1Y]\n   year   cnt forecast forecast_error\n  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;\n1  2014  164.     161.          3.14 \n2  2015  167.     167.          0.489\n3  2016  163.     173.         -9.26 \n\n\n\n\n\n1.3.5 Example 1.4: Holt’s linear trend method\n\n1.3.5.1 Smoothing on training data\nImplement a function to update L and b in each iteration (i.e. each additional observation).\n\nholt_step &lt;- function(param, x, alpha, beta) {\n  L &lt;- param$L\n  b &lt;- param$b\n\n  L_new = alpha * x + (1 - alpha) * (L + b)\n  b_new = beta * (L_new - L) + (1 - beta) * b\n\n  res &lt;- list(L = L_new, b = b_new)\n\n  res\n}\n\nSet parameters for Holt smoothing.\n\nalpha &lt;- 0.2\nbeta &lt;- 0.2\n\nInitialize L and b values.\n\nL1 &lt;- patent_ts_train$cnt[1]\nb1 &lt;- patent_ts_train$cnt[2] - patent_ts_train$cnt[1]\n\nCompute Holt smoothing over training time periods.\n\npatent_holt &lt;- \n  patent_ts_train |&gt; \n  mutate(\n    es_double = accumulate(patent_ts_train$cnt[-1], holt_step, .init = list(L = L1, b = b1), alpha = alpha, beta = beta)\n  ) |&gt; \n  unnest_wider(es_double) |&gt; \n  as_tsibble(index = year)\n\npatent_holt\n\n# A tsibble: 21 x 4 [1Y]\n    year   cnt     L     b\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  1993  21.5  21.5  7.1 \n 2  1994  28.6  28.6  7.1 \n 3  1995  59.2  40.4  8.04\n 4  1996  68.4  52.4  8.84\n 5  1997  67.3  62.5  9.08\n 6  1998  50.6  67.4  8.24\n 7  1999  56    71.7  7.46\n 8  2000  72.8  77.9  7.20\n 9  2001  73.7  82.8  6.75\n10  2002  76.6  87.0  6.23\n# ℹ 11 more rows\n\n\n\n\n\n\n\n\nNote\n\n\n\nunnest_wider() returns tibble object, not tsibble object. sCall as_tsibble() to convert the results back to tsibble object.\n\n\nVisualize smoothing results.\n\npatent_holt |&gt; \n  pivot_longer(c(cnt, L), names_to = \"statistics\") |&gt; \n  autoplot(value)\n\n\n\n\n\n\n\n\n\n\n1.3.5.2 Prediction\nObtain the latest value of L and b.\n\nlatest &lt;- \n  patent_holt |&gt; \n  slice_tail(n = 1)\n\nlatest\n\n# A tsibble: 1 x 4 [1Y]\n   year   cnt     L     b\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2013   160  157.  5.84\n\n\nMake a prediction on test data with linear trend assumption.\n\npatent_ts_test |&gt; \n  mutate(\n    forecast = latest$L + latest$b * (year - latest$year),\n    forecast_error = cnt - forecast\n  )\n\n# A tsibble: 3 x 4 [1Y]\n   year   cnt forecast forecast_error\n  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;\n1  2014  164.     163.          0.955\n2  2015  167.     169.         -1.68 \n3  2016  163.     175.        -11.4",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Smoothing</span>"
    ]
  },
  {
    "objectID": "ch01_smoothing.html#example-1.5",
    "href": "ch01_smoothing.html#example-1.5",
    "title": "1  Smoothing",
    "section": "1.4 Example 1.5",
    "text": "1.4 Example 1.5\n\n1.4.1 Load data\n\ngas_consumption &lt;- read_excel(\"data/J03.xlsx\", skip = 1) |&gt; \n  fill(year, .direction = \"down\") |&gt; \n  rename(consumption = comsumption) # fix typo in column name\n\ngas_consumption\n\n# A tibble: 84 × 3\n    year month consumption\n   &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1  2011     1        2006\n 2  2011     2        1620\n 3  2011     3        1354\n 4  2011     4         956\n 5  2011     5         560\n 6  2011     6         317\n 7  2011     7         254\n 8  2011     8         214\n 9  2011     9         231\n10  2011    10         482\n# ℹ 74 more rows\n\n\n\n\n1.4.2 Convert to tsibble object\n\ngas_consumption_ts &lt;- \n  gas_consumption |&gt; \n  mutate(year_month = make_yearmonth(year, month), .before = 1L) |&gt; \n  select(!c(year, month)) |&gt; \n  as_tsibble(index = year_month)\n\ngas_consumption_ts\n\n# A tsibble: 84 x 2 [1M]\n   year_month consumption\n        &lt;mth&gt;       &lt;dbl&gt;\n 1   2011 Jan        2006\n 2   2011 Feb        1620\n 3   2011 Mar        1354\n 4   2011 Apr         956\n 5   2011 May         560\n 6   2011 Jun         317\n 7   2011 Jul         254\n 8   2011 Aug         214\n 9   2011 Sep         231\n10   2011 Oct         482\n# ℹ 74 more rows\n\n\n\n\n1.4.3 Visualize seasonal pattern\nCall gg_season() from {feasts} package to visualize seasonal pattern of the variable of interest.\n\ngas_consumption_ts |&gt; \n  gg_season(consumption)\n\n\n\n\n\n\n\n\n\n\n1.4.4 Train/test data split\n\ngas_consumption_ts_train &lt;- \n  gas_consumption_ts |&gt; \n  filter(year_month &lt; make_yearmonth(2017, 1))\n\ngas_consumption_ts_test &lt;- \n  gas_consumption_ts |&gt; \n  filter(year_month &gt;= make_yearmonth(2017, 1))\n\n\n\n1.4.5 Holt-Winters’ multiplicative method\n\n1.4.5.1 Initialization\nExtract first 2 years data.\n\nm &lt;- 12\nr &lt;- 2\n\ngas_consumption_ts_init &lt;-\n  gas_consumption_ts_train |&gt; \n  slice_head(n = m * r)\n\nCompute an initial slope parameter value.\n\nb &lt;- \n  gas_consumption_ts_init |&gt; \n  mutate(slope = difference(consumption, lag = 12) / m) |&gt; \n  pull(slope) |&gt; \n  mean(na.rm= TRUE)\n\nb\n\n[1] -0.09722222\n\n\nCompute initial seasonal factor values.\n\ns &lt;-\n  gas_consumption_ts_init |&gt; \n  group_by(year(year_month)) |&gt; \n  mutate(seasonal = consumption / mean(consumption)) |&gt; \n  group_by(month(year_month)) |&gt; \n  mutate(seasonal = mean(seasonal)) |&gt; \n  ungroup() |&gt; \n  select(year_month, consumption, seasonal) |&gt; \n  slice_head(n = m) |&gt; \n  pull(seasonal)\n\ns\n\n [1] 2.2464249 1.9630622 1.6071974 1.1113816 0.5965731 0.3463274 0.2816907\n [8] 0.2336523 0.2739944 0.5426311 0.9887110 1.8083540\n\n\nCompute initial level.\n\nl &lt;- mean(gas_consumption_ts_init$consumption)\nl\n\n[1] 843.0833\n\n\n\n\n1.4.5.2 Smoothing on training data\n\nn_train &lt;- nrow(gas_consumption_ts_train)\nb_vec &lt;- vector(\"numeric\", length = m + n_train)\ns_vec &lt;- vector(\"numeric\", length = m + n_train)\nl_vec &lt;- vector(\"numeric\", length = m + n_train)\nx_vec &lt;- vector(\"numeric\", length = m + n_train)\n\nb_vec[m] &lt;- b\ns_vec[1:m] &lt;- s\nl_vec[m] &lt;- l\nx_vec[m + seq_len(n_train)] &lt;- gas_consumption_ts_train$consumption\n\n\nalpha &lt;- 0.1\nbeta &lt;- 0.1\ngamma &lt;- 0.1\n\nfor (t in (m + 1):length(b_vec)) {\n  l_vec[t] &lt;- alpha * x_vec[t] / s_vec[t - m] + (1 - alpha) * (l_vec[t - 1] + b_vec[t - 1])\n  b_vec[t] &lt;- beta * (l_vec[t] - l_vec[t - 1]) + (1 - beta) * b_vec[t - 1]\n  s_vec[t] &lt;- gamma * (x_vec[t] / l_vec[t]) + (1 - gamma) * s_vec[t - m]\n}\n\n\ngas_consumption_winters &lt;- \n  gas_consumption_ts_train |&gt; \n  mutate(\n    l = l_vec[-seq_len(m)],\n    b = b_vec[-seq_len(m)],\n    s = s_vec[-seq_len(m)]\n  )\n\ngas_consumption_winters |&gt; \n  tail(n = m)\n\n# A tsibble: 12 x 5 [1M]\n   year_month consumption     l       b     s\n        &lt;mth&gt;       &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1   2016 Jan        1759  772. -0.365  2.24 \n 2   2016 Feb        1669  781.  0.487  1.97 \n 3   2016 Mar        1330  786.  1.02   1.60 \n 4   2016 Apr         781  780.  0.284  1.08 \n 5   2016 May         456  778.  0.0291 0.602\n 6   2016 Jun         283  781.  0.381  0.349\n 7   2016 Jul         238  788.  1.01   0.284\n 8   2016 Aug         181  786.  0.687  0.238\n 9   2016 Sep         211  785.  0.544  0.273\n10   2016 Oct         378  779. -0.152  0.524\n11   2016 Nov         908  791.  1.10   1.02 \n12   2016 Dec        1452  793.  1.17   1.82 \n\n\n\n\n1.4.5.3 Forecast\n\nl_latest &lt;- \n  gas_consumption_winters |&gt; \n  slice_tail(n = 1) |&gt; \n  pull(l)\n\nb_latest &lt;- \n  gas_consumption_winters |&gt; \n  slice_tail(n = 1) |&gt; \n  pull(b)\n\ns_latest &lt;- \n  gas_consumption_winters |&gt; \n  slice_tail(n = m) |&gt; \n  pull(s)\n\nmonth_latest &lt;- \n  gas_consumption_winters |&gt; \n  slice_tail(n = 1) |&gt; \n  pull(year_month)\n\n\ngas_consumption_ts_test |&gt; \n  mutate(\n    k = year_month - month_latest,\n    forecast = (l_latest + b_latest * k) * s_latest[(k - 1) %% m + 1],\n    forecast_error = consumption - forecast\n  )\n\n# A tsibble: 12 x 5 [1M]\n   year_month consumption     k forecast forecast_error\n        &lt;mth&gt;       &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;\n 1   2017 Jan        1763     1    1779.         -15.9 \n 2   2017 Feb        1729     2    1563.         166.  \n 3   2017 Mar        1335     3    1277.          58.1 \n 4   2017 Apr         849     4     865.         -16.2 \n 5   2017 May         438     5     481.         -43.0 \n 6   2017 Jun         294     6     280.          14.5 \n 7   2017 Jul         223     7     227.          -4.36\n 8   2017 Aug         194     8     191.           2.88\n 9   2017 Sep         238     9     219.          18.8 \n10   2017 Oct         393    10     421.         -28.3 \n11   2017 Nov         970    11     821.         149.  \n12   2017 Dec        1811    12    1467.         344.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Smoothing</span>"
    ]
  }
]